// <auto-generated />
using System;
using MRIV.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MRIV.Migrations
{
    [DbContext(typeof(RequisitionContext))]
    [Migration("20250505205938_UpdateSettingsDefinition")]
    partial class UpdateSettingsDefinition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MRIV.Models.Approval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovalAction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalStep")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAutoGenerated")
                        .HasColumnType("bit");

                    b.Property<string>("PayrollNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequisitionId")
                        .HasColumnType("int");

                    b.Property<int?>("StepConfigId")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkflowConfigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequisitionId");

                    b.HasIndex("StepConfigId");

                    b.HasIndex("WorkflowConfigId");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("MRIV.Models.Department", b =>
                {
                    b.Property<int>("DepartmentCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("departmentCode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentCode"));

                    b.Property<string>("DepartmentHd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentHD");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DepartmentCode");

                    b.ToTable("Department", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("MRIV.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetTag")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ExpectedLifespanMonths")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaintenanceIntervalMonths")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaterialCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialSubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ModelNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NextMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specifications")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("WarrantyEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WarrantyStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarrantyTerms")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialCategoryId");

                    b.HasIndex("MaterialSubcategoryId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("MRIV.Models.MaterialAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedByPayrollNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignmentType")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PayrollNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RequisitionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecificLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Station")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StationCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RequisitionId");

                    b.ToTable("MaterialAssignments");
                });

            modelBuilder.Entity("MRIV.Models.MaterialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitOfMeasure")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("MaterialCategories");
                });

            modelBuilder.Entity("MRIV.Models.MaterialCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionRequired")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ApprovalId")
                        .HasColumnType("int");

                    b.Property<string>("ComponentStatuses")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("Condition")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionCheckType")
                        .HasColumnType("int");

                    b.Property<int?>("CosmeticStatus")
                        .HasColumnType("int");

                    b.Property<int?>("FunctionalStatus")
                        .HasColumnType("int");

                    b.Property<string>("InspectedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialAssignmentId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RequisitionId")
                        .HasColumnType("int");

                    b.Property<int?>("RequisitionItemId")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalId");

                    b.HasIndex("MaterialAssignmentId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RequisitionId");

                    b.HasIndex("RequisitionItemId");

                    b.ToTable("MaterialConditions");
                });

            modelBuilder.Entity("MRIV.Models.MaterialSubcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MaterialCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialCategoryId");

                    b.ToTable("MaterialSubCategories");
                });

            modelBuilder.Entity("MRIV.Models.MediaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Collection")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomProperties")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModelType", "ModelId");

                    b.ToTable("MediaFiles");
                });

            modelBuilder.Entity("MRIV.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecipientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MRIV.Models.NotificationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationTemplates");
                });

            modelBuilder.Entity("MRIV.Models.Requisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CollectorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CollectorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryStationCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DispatchPayrollNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DispatchType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DispatchVendor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ForwardToAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExternal")
                        .HasColumnType("bit");

                    b.Property<string>("IssueStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueStationCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaterialAssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("PayrollNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RequisitionType")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialAssignmentId");

                    b.ToTable("Requisitions");
                });

            modelBuilder.Entity("MRIV.Models.RequisitionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RequisitionId")
                        .HasColumnType("int");

                    b.Property<bool>("SaveToInventory")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RequisitionId");

                    b.ToTable("RequisitionItems");
                });

            modelBuilder.Entity("MRIV.Models.SettingDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsUserConfigurable")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValidationRules")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SettingDefinitions");
                });

            modelBuilder.Entity("MRIV.Models.SettingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("SettingGroups");
                });

            modelBuilder.Entity("MRIV.Models.SettingValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.Property<string>("ScopeId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SettingDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SettingDefinitionId", "Scope", "ScopeId")
                        .IsUnique();

                    b.ToTable("SettingValues");
                });

            modelBuilder.Entity("MRIV.Models.StationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StationPoint")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("StationCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "headoffice",
                            DataSource = "Department",
                            StationName = "Head Office",
                            StationPoint = "both"
                        },
                        new
                        {
                            Id = 2,
                            Code = "factory",
                            DataSource = "Station",
                            FilterCriteria = "{\"exclude\": [\"region\", \"zonal\"]}",
                            StationName = "Factory",
                            StationPoint = "both"
                        },
                        new
                        {
                            Id = 3,
                            Code = "region",
                            DataSource = "Station",
                            FilterCriteria = "{\"include\": [\"region\"]}",
                            StationName = "Region",
                            StationPoint = "both"
                        },
                        new
                        {
                            Id = 4,
                            Code = "vendor",
                            DataSource = "Vendor",
                            StationName = "Vendor",
                            StationPoint = "delivery"
                        });
                });

            modelBuilder.Entity("MRIV.Models.Tbrequisition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Addedby")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("addedby");

                    b.Property<string>("Admin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("admin");

                    b.Property<DateTime?>("AdminDate")
                        .HasColumnType("datetime")
                        .HasColumnName("admin_date");

                    b.Property<string>("AdminOfficer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("admin_officer");

                    b.Property<string>("Adminapprove")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adminapprove");

                    b.Property<DateTime?>("AdminapproveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("adminapprove_date");

                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("applicant");

                    b.Property<string>("Code1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code1");

                    b.Property<decimal?>("Collectorid")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("collectorid");

                    b.Property<string>("Collectorname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("collectorname");

                    b.Property<string>("External")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("external");

                    b.Property<string>("Externalmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("externalmail");

                    b.Property<DateTime?>("FwdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fwd_date");

                    b.Property<string>("Fwdapprove")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fwdapprove");

                    b.Property<decimal?>("Issued1")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("issued1");

                    b.Property<string>("IssuedByApproval")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("issued_by_approval");

                    b.Property<DateTime?>("Issuedate")
                        .HasColumnType("datetime")
                        .HasColumnName("issuedate");

                    b.Property<string>("Issuepoint")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("issuepoint");

                    b.Property<string>("Item1")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("item1");

                    b.Property<string>("RecComments")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rec_comments");

                    b.Property<string>("RecOfficer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rec_officer");

                    b.Property<DateTime?>("Recdate")
                        .HasColumnType("datetime")
                        .HasColumnName("recdate");

                    b.Property<string>("Receivedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("receivedby");

                    b.Property<string>("ReceivingOfficerApproval")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("receiving_officer_approval");

                    b.Property<string>("RejectedRec")
                        .HasMaxLength(155)
                        .IsUnicode(false)
                        .HasColumnType("varchar(155)")
                        .HasColumnName("rejected_rec");

                    b.Property<string>("RejectedSup")
                        .HasMaxLength(155)
                        .IsUnicode(false)
                        .HasColumnType("varchar(155)")
                        .HasColumnName("rejected_sup");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("remarks1");

                    b.Property<string>("ReqOfficer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("req_officer");

                    b.Property<string>("ReqOfficerApproval")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("req_officer_approval");

                    b.Property<string>("ReqUsername")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("req_username");

                    b.Property<string>("SupComments")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sup_comments");

                    b.Property<DateTime?>("SupDate")
                        .HasColumnType("datetime")
                        .HasColumnName("sup_date");

                    b.Property<DateTime?>("Sysdate")
                        .HasColumnType("datetime")
                        .HasColumnName("sysdate");

                    b.Property<string>("Usepoint")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("usepoint");

                    b.HasKey("Id");

                    b.ToTable("tbrequisition", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("MRIV.Models.WorkflowConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeliveryStationCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IssueStationCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("WorkflowConfigs");
                });

            modelBuilder.Entity("MRIV.Models.WorkflowStepConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApproverRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Conditions")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RoleParameters")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("StepAction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowConfigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowConfigId");

                    b.ToTable("WorkflowStepConfigs");
                });

            modelBuilder.Entity("MRIV.Models.Approval", b =>
                {
                    b.HasOne("MRIV.Models.Requisition", "Requisition")
                        .WithMany("Approvals")
                        .HasForeignKey("RequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MRIV.Models.WorkflowStepConfig", "StepConfig")
                        .WithMany()
                        .HasForeignKey("StepConfigId");

                    b.HasOne("MRIV.Models.WorkflowConfig", "WorkflowConfig")
                        .WithMany()
                        .HasForeignKey("WorkflowConfigId");

                    b.Navigation("Requisition");

                    b.Navigation("StepConfig");

                    b.Navigation("WorkflowConfig");
                });

            modelBuilder.Entity("MRIV.Models.Material", b =>
                {
                    b.HasOne("MRIV.Models.MaterialCategory", "MaterialCategory")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MRIV.Models.MaterialSubcategory", "MaterialSubcategory")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialSubcategoryId");

                    b.Navigation("MaterialCategory");

                    b.Navigation("MaterialSubcategory");
                });

            modelBuilder.Entity("MRIV.Models.MaterialAssignment", b =>
                {
                    b.HasOne("MRIV.Models.Material", "Material")
                        .WithMany("MaterialAssignments")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MRIV.Models.Requisition", "Requisition")
                        .WithMany()
                        .HasForeignKey("RequisitionId");

                    b.Navigation("Material");

                    b.Navigation("Requisition");
                });

            modelBuilder.Entity("MRIV.Models.MaterialCondition", b =>
                {
                    b.HasOne("MRIV.Models.Approval", "Approval")
                        .WithMany()
                        .HasForeignKey("ApprovalId");

                    b.HasOne("MRIV.Models.MaterialAssignment", "MaterialAssignment")
                        .WithMany("MaterialConditions")
                        .HasForeignKey("MaterialAssignmentId");

                    b.HasOne("MRIV.Models.Material", "Material")
                        .WithMany("MaterialConditions")
                        .HasForeignKey("MaterialId");

                    b.HasOne("MRIV.Models.Requisition", "Requisition")
                        .WithMany()
                        .HasForeignKey("RequisitionId");

                    b.HasOne("MRIV.Models.RequisitionItem", "RequisitionItem")
                        .WithMany()
                        .HasForeignKey("RequisitionItemId");

                    b.Navigation("Approval");

                    b.Navigation("Material");

                    b.Navigation("MaterialAssignment");

                    b.Navigation("Requisition");

                    b.Navigation("RequisitionItem");
                });

            modelBuilder.Entity("MRIV.Models.MaterialSubcategory", b =>
                {
                    b.HasOne("MRIV.Models.MaterialCategory", "MaterialCategory")
                        .WithMany("Subcategories")
                        .HasForeignKey("MaterialCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialCategory");
                });

            modelBuilder.Entity("MRIV.Models.Requisition", b =>
                {
                    b.HasOne("MRIV.Models.MaterialAssignment", "MaterialAssignment")
                        .WithMany()
                        .HasForeignKey("MaterialAssignmentId");

                    b.Navigation("MaterialAssignment");
                });

            modelBuilder.Entity("MRIV.Models.RequisitionItem", b =>
                {
                    b.HasOne("MRIV.Models.Material", "Material")
                        .WithMany("RequisitionItems")
                        .HasForeignKey("MaterialId");

                    b.HasOne("MRIV.Models.Requisition", "Requisition")
                        .WithMany("RequisitionItems")
                        .HasForeignKey("RequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Requisition");
                });

            modelBuilder.Entity("MRIV.Models.SettingDefinition", b =>
                {
                    b.HasOne("MRIV.Models.SettingGroup", "Group")
                        .WithMany("SettingDefinitions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MRIV.Models.SettingGroup", b =>
                {
                    b.HasOne("MRIV.Models.SettingGroup", "ParentGroup")
                        .WithMany("ChildGroups")
                        .HasForeignKey("ParentGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("MRIV.Models.SettingValue", b =>
                {
                    b.HasOne("MRIV.Models.SettingDefinition", "SettingDefinition")
                        .WithMany("SettingValues")
                        .HasForeignKey("SettingDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SettingDefinition");
                });

            modelBuilder.Entity("MRIV.Models.WorkflowStepConfig", b =>
                {
                    b.HasOne("MRIV.Models.WorkflowConfig", "WorkflowConfig")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowConfig");
                });

            modelBuilder.Entity("MRIV.Models.Material", b =>
                {
                    b.Navigation("MaterialAssignments");

                    b.Navigation("MaterialConditions");

                    b.Navigation("RequisitionItems");
                });

            modelBuilder.Entity("MRIV.Models.MaterialAssignment", b =>
                {
                    b.Navigation("MaterialConditions");
                });

            modelBuilder.Entity("MRIV.Models.MaterialCategory", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("MRIV.Models.MaterialSubcategory", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("MRIV.Models.Requisition", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("RequisitionItems");
                });

            modelBuilder.Entity("MRIV.Models.SettingDefinition", b =>
                {
                    b.Navigation("SettingValues");
                });

            modelBuilder.Entity("MRIV.Models.SettingGroup", b =>
                {
                    b.Navigation("ChildGroups");

                    b.Navigation("SettingDefinitions");
                });

            modelBuilder.Entity("MRIV.Models.WorkflowConfig", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
