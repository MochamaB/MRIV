@model IEnumerable<MRIV.ViewModels.ApprovalStepViewModel>
@using MRIV.Enums
@using MRIV.Helpers
@using MRIV.ViewModels

@{
    ViewData["Title"] = "Approvals";
    var pagination = ViewBag.Pagination as PaginationViewModel;

    // Group approvals by requisition ID
    var groupedApprovals = Model.GroupBy(a => a.RequisitionId)
        .OrderByDescending(g => g.Key)
        .ToList();
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header border-bottom-dashed" style="padding:1rem 0rem">
                <div class="d-flex align-items-center">
                    <h5 class="card-title mb-0 flex-grow-1"></h5>
                    <div class="flex-shrink-0">
                        <div class="d-flex gap-2 flex-wrap">
                            <div class="search-box">
                                <input type="text" class="form-control search" placeholder="Search...">
                                <i class="ri-search-line search-icon"></i>
                            </div>

                            <!-- Filter Toggle Button -->
                            @await Html.PartialAsync("_FilterToggleButton")

                            <!-- Add other action buttons here -->

                        </div>
                    </div>
                </div>
            </div>

            <!-- Filters Partial View -->
            @await Html.PartialAsync("_Filters", (FilterViewModel)ViewBag.Filters)

            <!-- Table Content -->
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered align-middle mb-0">
                        <thead>
                            <tr>
                                <th>ReqID</th>
                                <th>Step</th>
                                <th>Approval Step</th>
                                <th>Approver</th>
                                <th>Status</th>
                                <th>Action</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var group in groupedApprovals)
                            {
                                var requisitionId = group.Key;
                                var approvalSteps = group.OrderBy(a => a.StepNumber).ToList();
                                var rowCount = approvalSteps.Count;

                                for (int i = 0; i < rowCount; i++)
                                {
                                    var item = approvalSteps[i];
                                    var isLastInGroup = (i == rowCount - 1);

                                    <tr style="@(isLastInGroup ? "border-bottom: 3px solid #b4b6c1;" : "")">
                                        @if (i == 0)
                                        {
                                            <td rowspan="@rowCount" style="vertical-align: middle; background-color: #f9f9f9; text-align: center; font-weight: bold;">
                                                <a asp-controller="Requisitions" asp-action="Details" asp-route-id="@requisitionId">
                                                    @requisitionId
                                                </a>
                                            </td>
                                        }
                                        <td>@item.StepNumber</td>
                                        <td>@item.ApprovalStep</td>
                                        <td>
                                            <div>
                                                <strong>@item.EmployeeName</strong>
                                                @if (!string.IsNullOrEmpty(item.EmployeeDesignation))
                                                {
                                                    <span> - @item.EmployeeDesignation</span>
                                                }
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge @BadgeHelper.GetApprovalsBadgeClass(item.ApprovalStatus)">
                                                @EnumHelper.GetEnumDescription(item.ApprovalStatus)
                                            </span>
                                        </td>
                                        <td>
                                            @if (item.ApprovalStatus == ApprovalStatus.NotStarted)
                                            {
                                                <span class="text-muted">----</span>
                                            }
                                            else
                                            {
                                                <a asp-action="ApprovalWizard" asp-route-id="@item.Id" class="text-primary">
                                                    <i class="mdi mdi-arrow-right-bold-circle-outline mdi-24px text-primary" style="vertical-align: middle;"></i> @item.ApprovalAction
                                                </a>
                                            }
                                          
                                        </td>
                                        <td>
                                            <partial name="_ActionButtons" model="(item.Id, ActionButtonStyle.Inline)" />
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <!-- Pagination -->
                @if (pagination != null)
                {
                    @await Html.PartialAsync("_Pagination", pagination)
                }
            </div>
        </div>
    </div>
</div>
