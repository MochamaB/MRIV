@model MRIV.ViewModels.WorkflowConfigViewModel

@{
    ViewData["Title"] = "Edit Workflow Configuration";
}

<div class=" contwrapper">
    <h4>Edit Workflow Configuration</h4>
    <hr />

<form asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="WorkflowConfig.Id" />

    
        
            <h5>Workflow Details</h5>
       
        
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="WorkflowConfig.IssueStationCategory" class="control-label">Issue Station Category</label>
                        <select asp-for="WorkflowConfig.IssueStationCategory" asp-items="Model.IssueStationCategories" class="formcontrol2">
                            <option value="">-- Select Issue Station Category --</option>
                        </select>
                        <span asp-validation-for="WorkflowConfig.IssueStationCategory" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="WorkflowConfig.DeliveryStationCategory" class="control-label">Delivery Station Category</label>
                        <select asp-for="WorkflowConfig.DeliveryStationCategory" asp-items="Model.DeliveryStationCategories" class="formcontrol2">
                            <option value="">-- Select Delivery Station Category --</option>
                        </select>
                        <span asp-validation-for="WorkflowConfig.DeliveryStationCategory" class="text-danger"></span>
                    </div>
                </div>
            </div>
        
    

    
        <div class=" d-flex justify-content-between align-items-center">
            <h5>Workflow Steps</h5>
            <button type="submit" formaction="@Url.Action("AddStep")" class="btn btn-primary">
                <i class="mdi mdi-plus-circle-outline"></i> Add Step
            </button>
        </div>
        <div class="card-body">
            @if (Model.Steps != null && Model.Steps.Any())
            {
                <div class="table-responsive">
                    <table class="table select-table">
                        <thead class="thead-light">
                            <tr>
                                <th>Order</th>
                                <th>Step Name</th>
                                <th>Approver Role</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Steps.Count; i++)
                            {
                                <tr>
                                    <td style="width: 10%">
                                        <input asp-for="Steps[i].Id" type="hidden" />
                                        <input asp-for="Steps[i].StepOrder" class="form-control" readonly />
                                    </td>
                                    <td style="width: 40%">
                                        <input asp-for="Steps[i].StepName" class="form-control" />
                                        <span asp-validation-for="Steps[i].StepName" class="text-danger"></span>
                                    </td>
                                    <td style="width: 30%">
                                        <select asp-for="Steps[i].ApproverRole" asp-items="Model.ApproverRoles" class="form-control">
                                            <option value="">-- Select Role --</option>
                                        </select>
                                        <span asp-validation-for="Steps[i].ApproverRole" class="text-danger"></span>
                                    </td>
                                    <td style="width: 20%">
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-info btn-sm" data-toggle="collapse" data-target="#parameters-@i">
                                                <i class="mdi mdi-cogs"></i> Parameters
                                            </button>
                                            <button type="submit" formaction="@Url.Action("CloneStep", new { stepIndex = i })" class="btn btn-primary btn-sm">
                                                <i class="mdi mdi-content-copy"></i> Clone
                                            </button>
                                            <button type="submit" formaction="@Url.Action("RemoveStep", new { stepIndex = i })" class="btn btn-danger btn-sm">
                                                <i class="mdi mdi-delete"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="4" class="p-0">
                                        <div id="parameters-@i" class="collapse">
                                            <div class="card card-body bg-light">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <h5>Role Parameters</h5>
                                                        @{
                    // Here you would handle dynamic parameters - basic implementation
                                                            <div class="form-group">
                                                                <label>Department</label>
                                                                <input type="text" name="Steps[@i].RoleParameters[Department]" value="@(Model.Steps[i].RoleParameters != null && Model.Steps[i].RoleParameters.ContainsKey("Department") ? Model.Steps[i].RoleParameters["Department"] : "")" class="form-control" />
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="col-md-6">
                                                        <h5>Conditions</h5>
                                                        @{
                    // Here you would handle dynamic conditions - basic implementation
                                                            <div class="form-group">
                                                                <label>Amount Threshold</label>
                                                                <input type="text" name="Steps[@i].Conditions[AmountThreshold]" value="@(Model.Steps[i].Conditions != null && Model.Steps[i].Conditions.ContainsKey("AmountThreshold") ? Model.Steps[i].Conditions["AmountThreshold"] : "")" class="form-control" />
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <p>No steps have been added to this workflow yet. Click "Add Step" to begin.</p>
                </div>
            }
        </div>
   

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save Changes</button>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // This function will help sort the steps if needed in the future
            // Currently the controller handles reordering on removal
        });
    </script>
}