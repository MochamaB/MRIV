<script>
    $(document).ready(function() {
        // Function to load notifications
        function loadNotifications() {
            $.ajax({
                url: '@Url.Action("GetUnreadNotifications", "Notifications")',
                type: 'GET',
                success: function (data) {
                    // Clear loading indicator
                    $('#notificationLoadingIndicator').hide();

                    // Find the notifications container and list
                    var container = $('#notificationContainer');
                    var notificationList = $('#notificationList');

                    // Display notifications
                    if (data.length === 0) {
                        container.find('#notificationLoadingIndicator').hide();
                        container.find('#noNotificationsMessage').removeClass('d-none');
                        $('#viewAllSection').hide();
                    } else {
                        container.find('#noNotificationsMessage').addClass('d-none');
                        container.find('#notificationLoadingIndicator').hide();

                        // Clear existing notifications
                        notificationList.empty();

                        // Create notifications using template cloning (limit to 5)
                        $.each(data.slice(0, 5), function(i, notification) {
                            var timeAgo = moment(notification.createdAt).fromNow();
                            var iconClass = getNotificationIconClass(notification.notificationType);
                            var icon = getNotificationIcon(notification.notificationType);

                            // Clone the template
                            var notificationItem = $('#notificationTemplate').find('.notification-item').clone();
                            
                            // Populate the cloned template with data
                            notificationItem.attr('data-id', notification.id);
                            notificationItem.find('.notification-icon').addClass(iconClass);
                            notificationItem.find('.notification-icon-class').removeClass().addClass(icon);
                            notificationItem.find('.notification-link').attr('href', notification.url || '#');
                            notificationItem.find('.notification-title').text(notification.title);
                            notificationItem.find('.notification-message').text(notification.message);
                            notificationItem.find('.notification-time').text(timeAgo);

                            // Append to notification list
                            notificationList.append(notificationItem);
                        });

                        // Show the View All button after notifications
                        $('#viewAllSection').show();

                        // Add click handler for notification items
                        notificationList.find('.notification-item').on('click', function() {
                            markAsRead($(this).data('id'));
                        });
                    }
                },
                error: function(xhr, status, error) {
                    $('#notificationLoadingIndicator').hide();
                    console.log("Error loading notifications: " + error);
                }
            });
        }

        // Function to get notification icon class based on type
        function getNotificationIconClass(type) {
            switch(String(type).toLowerCase()) {
                case 'approval': return 'bg-success-subtle text-success';
                case 'rejection': return 'bg-danger-subtle text-danger';
                case 'dispatch': return 'bg-primary-subtle text-primary';
                case 'receipt': return 'bg-info-subtle text-info';
                default: return 'bg-secondary-subtle text-secondary';
            }
        }

        // Function to get notification icon based on type
        function getNotificationIcon(type) {
            switch(String(type).toLowerCase()) {
                case 'approval': return 'mdi mdi-check-circle';
                case 'rejection': return 'mdi mdi-close-circle';
                case 'dispatch': return 'mdi mdi-truck';
                case 'receipt': return 'mdi mdi-package';
                case 'requisition': return 'mdi mdi-file-document';
                default: return 'mdi mdi-bell';
            }
        }

        // Update notification count
        function updateNotificationCount() {
            $.ajax({
                url: '@Url.Action("GetUnreadCount", "Notifications")',
                type: 'GET',
                success: function (response) {
                    // Update count in the badge
                    var count = response.count;
                    var $badge = $('.topbar-badge');

                    if (count > 0) {
                        $badge.text(count);
                        $badge.removeClass('d-none');
                    } else {
                        $badge.addClass('d-none');
                    }

                    // Update count in dropdown header badge
                    $('.dropdown-tabs .badge').text(`${count} New`);
                },
                error: function(xhr, status, error) {
                    console.log("Error fetching notification count: " + error);
                }
            });
        }

        // Mark notification as read
        function markAsRead(id) {
            $.ajax({
                url: '@Url.Action("MarkAsRead", "Notifications")',
                type: 'POST',
                data: { id: id },
                success: function() {
                    // Update notification count after marking as read
                    updateNotificationCount();
                }
            });
        }

        // Initial load
        updateNotificationCount();

        // Load notifications when dropdown is clicked
        $('#page-header-notifications-dropdown').on('click', function() {
            // Show loading indicator and hide empty message
            $('#notificationLoadingIndicator').show();
            $('#noNotificationsMessage').addClass('d-none');
            loadNotifications();
        });

        // Refresh notification count periodically
        setInterval(updateNotificationCount, 60000); // Every minute
    });
</script>