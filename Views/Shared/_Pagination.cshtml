@model MRIV.ViewModels.PaginationViewModel

@if (Model.TotalPages > 1)
{
    <div class="d-flex justify-content-end mt-3">
        <div class="pagination-wrap hstack gap-2">
            @if (Model.HasPreviousPage)
            {
                <a class="page-item pagination-prev" href="@Url.Action(Model.Action, Model.Controller, new { page = Model.CurrentPage - 1, pageSize = Model.ItemsPerPage, filters = Model.RouteData })">
                    <i class="ri-arrow-left-s-line"></i>
                </a>
            }
            else
            {
                <a class="page-item pagination-prev disabled" href="#">
                    <i class="ri-arrow-left-s-line"></i>
                </a>
            }
            
            @for (int i = Model.StartPage; i <= Model.EndPage; i++)
            {
                <a class="page-item pagination-page @(i == Model.CurrentPage ? "active" : "")" href="@Url.Action(Model.Action, Model.Controller, new { page = i, pageSize = Model.ItemsPerPage, filters = Model.RouteData })">@i</a>
            }
            
            @if (Model.HasNextPage)
            {
                <a class="page-item pagination-next" href="@Url.Action(Model.Action, Model.Controller, new { page = Model.CurrentPage + 1, pageSize = Model.ItemsPerPage, filters = Model.RouteData })">
                    <i class="ri-arrow-right-s-line"></i>
                </a>
            }
            else
            {
                <a class="page-item pagination-next disabled" href="#">
                    <i class="ri-arrow-right-s-line"></i>
                </a>
            }
        </div>
    </div>
    
    <div class="d-flex justify-content-between align-items-center mt-2">
        <div>
            <p class="text-muted mb-0">Showing <span class="fw-semibold">@(((Model.CurrentPage - 1) * Model.ItemsPerPage) + 1)</span> to <span class="fw-semibold">@Math.Min(Model.CurrentPage * Model.ItemsPerPage, Model.TotalItems)</span> of <span class="fw-semibold">@Model.TotalItems</span> entries</p>
        </div>
        <div class="text-muted">
            <select id="pageSize" class="form-select form-select-sm" onchange="changePageSize(this.value)">
                @if (Model.ItemsPerPage == 10)
                {
                    <option value="10" selected>10 per page</option>
                }
                else
                {
                    <option value="10">10 per page</option>
                }
                
                @if (Model.ItemsPerPage == 25)
                {
                    <option value="25" selected>25 per page</option>
                }
                else
                {
                    <option value="25">25 per page</option>
                }
                
                @if (Model.ItemsPerPage == 50)
                {
                    <option value="50" selected>50 per page</option>
                }
                else
                {
                    <option value="50">50 per page</option>
                }
                
                @if (Model.ItemsPerPage == 100)
                {
                    <option value="100" selected>100 per page</option>
                }
                else
                {
                    <option value="100">100 per page</option>
                }
            </select>
        </div>
    </div>
}

<script>
    function changePageSize(size) {
        var url = new URL(window.location.href);
        url.searchParams.set('pageSize', size);
        url.searchParams.set('page', 1); // Reset to first page when changing page size
        window.location.href = url.toString();
    }
</script>
