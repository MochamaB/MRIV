@model IEnumerable<MRIV.Models.Requisition>
@using MRIV.ViewModels

@{
    // This is an example of how to use the filter components in your views
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header border-bottom-dashed">
                <div class="d-flex align-items-center">
                    <h5 class="card-title mb-0 flex-grow-1">Requisitions</h5>
                    <div class="flex-shrink-0">
                        <div class="d-flex gap-2 flex-wrap">
                            <div class="search-box">
                                <input type="text" class="form-control search" placeholder="Search...">
                                <i class="ri-search-line search-icon"></i>
                            </div>
                            
                            <!-- Filter Toggle Button -->
                            @await Html.PartialAsync("_FilterToggleButton")
                            
                            <!-- Add other action buttons here -->
                            <a href="@Url.Action("Create", "MaterialRequisition")" class="btn btn-primary">
                                <i class="ri-add-line align-bottom me-1"></i> New Requisition
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Filters Partial View -->
            @await Html.PartialAsync("_Filters", (FilterViewModel)ViewBag.Filters)
            
            <!-- Table Content -->
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-nowrap align-middle mb-0">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Department</th>
                                <th>Issue Station</th>
                                <th>Delivery Station</th>
                                <th>Status</th>
                                <th>Created Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@(item.Department?.DepartmentName ?? "N/A")</td>
                                    <td>@item.IssueStation</td>
                                    <td>@item.DeliveryStation</td>
                                    <td>@item.Status</td>
                                    <td>@(item.CreatedAt?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                    <td>
                                        <div class="hstack gap-2">
                                            <a href="@Url.Action("Details", "MaterialRequisition", new { id = item.Id })" class="btn btn-sm btn-soft-primary">
                                                <i class="ri-eye-line"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", "MaterialRequisition", new { id = item.Id })" class="btn btn-sm btn-soft-success">
                                                <i class="ri-edit-line"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>