@using MRIV.Enums
@using MRIV.Helpers
@model MRIV.Models.RequisitionItem
@{
    // The index must be passed via ViewData with key "Index"
    int index = ViewData["Index"] as int? ?? 0;
    var vendors = ViewData["Vendors"] as List<MRIV.ViewModels.Vendor> ?? new List<MRIV.ViewModels.Vendor>();
    var materialCategories = ViewData["MaterialCategories"] as List<MRIV.Models.MaterialCategory> ?? new List<MRIV.Models.MaterialCategory>();
}

<style>
    .accordion-button {
        background-color: white !important; /* Inactive state color */
        transition: background-color 0.3s ease; /* Optional smooth transition */
    }

        .accordion-button:not(.collapsed) {
            background-color: #f8f9fa !important; /* Active state color (grey) */
            box-shadow: none !important; /* Remove default Bootstrap focus shadow */
        }

        /* Optional: Change text color if needed */
        .accordion-button:not(.collapsed) {
            color: #000000 !important; /* Text color when active */
        }

    .accordion-header {
        padding-bottom: 10px;
    }
    .accordion-item:not(:first-of-type) {
        border-top: 2px solid #dee2e6;
    }


    .remove-item {
        width: 20px;
        height: 20px;
        font-size: 15px;
        padding: 2px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
        </style>
<div class="accordion-item item-row" data-index="@index" style="margin-bottom:15px">
    <!-- Hidden form for removing this item -->
    <input type="hidden" name="itemIndex" value="@index" />

    <h2 class="accordion-header" id="heading_@index">
        <div class="d-flex justify-content-between align-items-center w-100">
            <button class="accordion-button @(index == 0 ? "" : "collapsed")" type="button" data-bs-toggle="collapse" 
                    data-bs-target="#collapse_@index" aria-expanded="@(index == 0 ? "true" : "false")" 
                    aria-controls="collapse_@index" style="flex: 1;">
                <i class="mdi mdi-plus-circle-outline mr-2" style="vertical-align: middle; font-size: 1.4rem;"></i>
                Item @(index + 1)
            </button>
            @if (index > 0)
            {
                <button type="button" class="btn-close remove-item"
                        style="margin-right: 15px; z-index:10; filter: invert(17%) sepia(100%) saturate(7480%) hue-rotate(357deg) brightness(92%) contrast(118%);"
                        data-index="@index" title="Remove item">
                </button>
            }
        </div>
    </h2>
    <div id="collapse_@index" class="accordion-collapse collapse @(index == 0 ? "show" : "")" 
         aria-labelledby="heading_@index" data-bs-parent="#itemsAccordion">
        <div class="accordion-body">
            <div class="row">
                <div class="col-md-6">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Material Name</label> <span class="requiredlabel">*</span>
                        <input type="text" asp-for="Name" name="RequisitionItems[@index].Name" class="form-control" placeholder="Brand or Title" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                        
                       
                        
                      
                    </div>
                    <div class="form-group">
                        <label class="control-label">Material Description </label><span class="requiredlabel">*</span>
                        <textarea asp-for="Description" name="RequisitionItems[@index].Description" class="auto-resize-textarea form-control" rows="1" placeholder="Enter Description..."></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Quantity</label> <span class="requiredlabel">*</span>
                        <input type="number" asp-for="Quantity" name="RequisitionItems[@index].Quantity" class="form-control" value="1" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">Item Condition</label> <span class="requiredlabel">*</span>
                        <select asp-for="Condition" name="RequisitionItems[@index].Condition" asp-items="EnumHelper.GetEnumDescriptionSelectList<MRIV.Enums.RequisitionItemCondition>()" class="formcontrol2">
                            <option value="">Select Condition</option>
                        </select>
                        <span asp-validation-for="Condition" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-2">
                        <label class="control-label">Status</label> <span class="requiredlabel">*</span>
                        <select asp-for="Status" name="RequisitionItems[@index].Status" asp-items="EnumHelper.GetEnumDescriptionSelectList<MRIV.Enums.RequisitionItemStatus>()" class="formcontrol2">
                            <option value="">Select Status</option>
                        </select>
                        <span asp-validation-for="Status" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-1">
                        <div class="form-check form-check-flat form-check-primary">
                            <label class="form-check-label" style="font-size:1rem">
                                <input  name="RequisitionItems[@index].SaveToInventory" type="checkbox" class="form-check-input" 
                                id="saveToInventory_@index" @(Model.SaveToInventory ? "checked" : "")
                                    value="true" />
                                Add this Item to Inventory
                                <i class="input-helper"></i>
                            </label>
                            <!-- Add a hidden field to ensure false values are submitted -->
                            <input type="hidden" name="RequisitionItems[@index].SaveToInventory" value="false" />
                        </div>
                    
                    </div>
                    <div class="mb-0">
                        <a class="table" data-bs-toggle="modal" data-bs-target="#inventoryModal_@index">
                            <i class="mdi mdi-plus-circle-outline mr-2" style="vertical-align: middle; font-size: 1.4rem;"></i>
                            Add Inventory Details
                        </a>
                    </div>
                    <!-- Material info badges -->
                    <div id="badgeContainer_@index" class="mt-2 mb-1 @(string.IsNullOrEmpty(Model.Material?.Code) ? "d-none" : "")">
                        <span id="selectedMaterialCategory_@index" class="badge bg-warning text-dark me-2 mb-1">
                            @(Model.Material != null && Model.Material.MaterialCategoryId != 0 ? materialCategories.FirstOrDefault(c => c.Id == Model.Material.MaterialCategoryId)?.Name : "")
                        </span>
                        <span id="selectedMaterialSubcategory_@index" class="badge bg-warning text-dark me-2 mb-1">
                            @(Model.Material != null && Model.Material.MaterialSubcategoryId != 0 ? materialCategories.FirstOrDefault(c => c.Id == Model.Material.MaterialSubcategoryId)?.Name : "")
                        </span>
                        <span id="selectedMaterialCode_@index" class="badge bg-warning text-dark me-2 mb-1">
                            @(Model.Material?.Code ?? "")
                        </span>
                        <span id="selectedMaterialVendor_@index" class="badge bg-warning text-dark me-2 mb-1">
                            @(Model.Material?.VendorId != null ? vendors.FirstOrDefault(v => v.VendorID.ToString() == Model.Material.VendorId)?.Name : "")
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Inventory Modal for this item -->
    <div class="modal fade" id="inventoryModal_@index" tabindex="-1">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header modal-headercustom">
                    <h5 class="modal-title" style="color:white;">Add Inventory Details</h5>
                    <button type="button" class="btn-close text-white" style="filter: invert(1);" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- Material Fields -->
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label">Material Category</label><span class="requiredlabel">*</span>
                                <select name="RequisitionItems[@index].Material.MaterialCategoryId" class="formcontrol2 materialCategoryId" data-index="@index">
                                    <option value="">Select Category</option>
                                    @foreach (var category in materialCategories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="Material.MaterialCategoryId" class="text-danger"></span>
                            </div>
                            <!-- Inside the modal-body div, after the Material Category field -->
                            <div class="form-group">
                                <label class="control-label">Material Subcategory</label><span class="requiredlabel">*</span>
                                <select asp-for="Material.MaterialSubcategoryId" name="RequisitionItems[@index].Material.MaterialSubcategoryId"
                                        class="formcontrol2 materialSubcategoryId"
                                        data-index="@index">
                                    <option value="">Select Subcategory</option>
                                    @if (Model.Material?.MaterialSubcategoryId != null && Model.Material.MaterialSubcategoryId > 0)
                                    {
                                        <option value="@Model.Material.MaterialSubcategoryId" selected>
                                            @(Model.Material.MaterialSubcategory?.Name ?? "")
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="Material.MaterialSubcategoryId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Enter Code / Serial No OR Generate Code</label><span class="requiredlabel">*</span>
                                <div class="input-group">
                                    <input type="text" asp-for="Material.Code" name="RequisitionItems[@index].Material.Code" value="@(Model.Material?.Code ?? "")" class="form-control materialCode" data-index="@index">
                                    <button type="button" class="btn btn-outline-primary generateCodeBtn" data-index="@index">
                                        Generate Code
                                    </button>
                                </div>
                                <span asp-validation-for="Material.Code" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Vendor <i>(Optional)</i></label>
                                <select asp-for="Material.VendorId" name="RequisitionItems[@index].Material.VendorId" class="formcontrol2 materialVendor" data-index="@index">
                                    <option value="">Select Vendor</option>
                                    @foreach (var vendor in vendors)
                                    {
                                        <option value="@vendor.VendorID">@vendor.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="Material.VendorId" class="text-danger"></span>
                            </div>
                            
                            <!-- Hidden fields for StationCategory, Station, and DepartmentId -->
                            <input type="hidden" name="RequisitionItems[@index].Material.StationCategory" id="stationCategory_@index" />
                            <input type="hidden" name="RequisitionItems[@index].Material.Station" id="station_@index" />
                            <input type="hidden" name="RequisitionItems[@index].Material.DepartmentId" id="departmentId_@index" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary saveInventoryDetailsBtn" data-index="@index">
                        Save Material
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>