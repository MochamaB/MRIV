@using MRIV.Enums
@using MRIV.Helpers
@{
    ViewData["Title"] = "Requisition Items";
    var currentStep = ViewBag.CurrentStep as string;
    @model MRIV.ViewModels.MaterialRequisitionWizardViewModel

}

<div class="row">
    <div class="col-md-10">
        <h4 class="ml-1"><b>Enter Requisition Items</b></h4>
        <hr style="border:2px solid black" />
    </div>
</div>

<div class="col-md-10 mb-2 mt-2">
    <div class="row g-2 align-items-center">
        <div class="col-md-9">
            <form id="materialSearchForm" class="mb-0">
                <div class="input-group">
                    <span class="input-group-text" style="background: white; border-right: none;">
                        <i class="mdi mdi-magnify" style="font-size: 1.6rem; color: #326408;"></i>
                    </span>
                    <input type="text" id="materialSearch" class="form-control" style="border-left: none;border-right:none"
                           placeholder="Search materials by code or name..." />
                    <span class="input-group-text" style="cursor: pointer; background: white; border-left: none;">
                        <i class="mdi mdi-close-circle d-none" id="clearMaterialSearch" style="font-size: 1.4rem; color: #dc3545;"></i>
                    </span>
                </div>
            </form>
            <div id="searchResultsContainer" class="dropdown-menu" style="max-height: 300px; overflow-y: auto; display: none;">
                <!-- Search results will be populated here -->
            </div>
        </div>
    </div>
</div>


<form id="wizardRequisitionItems" asp-controller="MaterialRequisition" asp-action="CreateRequisitionItems" method="post">
    @Html.AntiForgeryToken()
    <button type="button" id="addNewItemBtn" class="btn btn-primary text-white float-end mt-2"
            style="padding:0.5rem 1.8rem; margin: 0.1rem 0.1rem 0.5rem 0.2rem;">
        <i class="mdi mdi-plus-circle-outline mr-1" style="vertical-align: middle; font-size: 1.4rem;"></i> Add New Item
    </button>
    <div style="clear: both;"></div>

    <div id="itemsAccordion" class="accordion">
        @for (int i = 0; i < Model.RequisitionItems.Count; i++)
        {
            <partial name="CreateRequisition/_RequisitionItemRow" model="Model.RequisitionItems[i]" view-data='new ViewDataDictionary(ViewData) { { "Index", i }, { "Vendors", Model.Vendors }, { "MaterialCategories", Model.MaterialCategories } }' />
        }
    </div>

    <!-- Add the wizard buttons -->
    <partial name="_WizardNavigation" />
</form>

    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("materialSearch");
        const searchResultsContainer = document.getElementById("searchResultsContainer");
        const searchForm = document.getElementById("materialSearchForm");

        function updateSearchResultsWidth() {
            if (searchInput && searchResultsContainer) {
                const inputWidth = searchForm.querySelector('.input-group').offsetWidth;
                searchResultsContainer.style.width = inputWidth + "px";
            }
        }

        // Adjust width on page load
        updateSearchResultsWidth();

        // Adjust width if the window resizes
        window.addEventListener("resize", updateSearchResultsWidth);
    });

</script>