@using MRIV.Enums
@using MRIV.Helpers
@{
    ViewData["Title"] = "Select Approvers";
    var currentStep = ViewBag.CurrentStep as string;
    @model MRIV.ViewModels.MaterialRequisitionWizardViewModel

}
<style>
    .formcontrol2 {
        margin-left: 10px; /* Adds space between label and dropdown */
    }

    .inline-container {
        display: flex;
        align-items: center; /* Aligns items vertically */
    }

    .label-width {
        min-width: 90px; /* Adjust width as needed */
        white-space: nowrap; /* Prevents word wrap */
</style>
<div class="row" data-view="approvers-receivers">
    <!-- Personal Details Section -->
    <div class="col-md-10">
        <h4 class="ml-1"><b>Select Approvers and Receivers</b></h4>
        <hr style="border:2px solid black" />
    </div>
</div>
<form id="wizardApprovers"  asp-controller="MaterialRequisition" asp-action="CreateApprovals" class="myForm">
<div class="row">
    <div class="col-md-12" style="padding:2.0rem 4.0rem 0.1rem">
        <ul class="bullet-line-list">
            @foreach (var step in Model.ApprovalSteps)
            {
                <li>
                    <div class="col-md-10 d-flex justify-content-between">
                        <div class="col-md-10">
                            <h5 class="text-information">
                                <b>@step.StepNumber. @step.ApprovalStep</b>
                            </h5>
                            <hr />
                            <p class="text-muted mb-2">
                                <b>UPDATED ON:</b> @step.CreatedAt.ToString("dd MMM yyyy HH:mm")
                            </p>
                                <p class="text-muted mb-2">
                                    <b>STATION:</b> @step.StationName
                                </p>
                                @if (step.ApprovalStep != "Vendor Dispatch")
                                {
                                    <p class="text-muted">
                                        <b>DEPARTMENT:</b> @step.DepartmentName
                                    </p>
                                }
                           
                            <!-- Add dropdown for specific steps -->
                                <!-- Add dropdown for specific steps -->
                                @if (step.ApprovalStep == "Vendor Dispatch")
                                {
                                    <p class="text-muted inline-container" style="text-transform:uppercase">
                                        <b class="label-width">TO @step.ApprovalAction:</b>
                                        <select class="formcontrol2" disabled>
                                            <option value="ICTDispatch" selected>ICT DISPATCH</option>
                                        </select>
                                        <input type="hidden" name="@("SelectedEmployee_" + step.StepNumber)" value="ICTDispatch" />
                                    </p>
                                }
                                else
                                {
                                    SelectList finalList = null;
                                    if (Model.DepartmentEmployees != null && Model.DepartmentEmployees.TryGetValue(step.ApprovalStep, out var selectList) && selectList != null)
                                    {
                                        // Convert to list for manipulation
                                        var tempList = selectList.ToList();

                                        // Find if the current payroll exists in the list
                                        var existingItem = tempList.FirstOrDefault(item => item.Value == step.PayrollNo);

                                        // If not exists and payroll is valid, add it
                                        if (existingItem == null && !string.IsNullOrEmpty(step.PayrollNo) && step.PayrollNo != "unknown")
                                        {
                                            tempList.Insert(0, new SelectListItem
                                            {
                                                Value = step.PayrollNo,
                                                Text = string.IsNullOrEmpty(step.EmployeeName) ? step.PayrollNo : $"{step.EmployeeName} ({step.PayrollNo})",
                                                Selected = true
                                            });
                                        }
                                        else if (existingItem != null)
                                        {
                                            // Ensure the existing item is selected
                                            foreach (var item in tempList)
                                            {
                                                item.Selected = (item.Value == step.PayrollNo);
                                            }
                                        }

                                        finalList = new SelectList(tempList, "Value", "Text", step.PayrollNo);
                                    }
                                    else
                                    {
                                        finalList = new SelectList(new List<SelectListItem>(), "Value", "Text");
                                    }

                                    <p class="text-muted inline-container" style="text-transform:uppercase">
                                        <b class="label-width">TO @step.ApprovalAction:</b>
                                        @if (finalList.Count() == 0 || string.IsNullOrEmpty(step.PayrollNo) || step.PayrollNo == "unknown")
                                        {
                                            @Html.DropDownList(
                                            $"SelectedEmployee_{step.StepNumber}",
                                                                finalList,
                                                                "Select Employee",
                                                                new { @class = "formcontrol2", @required = "required", data_val_required = "Select approver" }
                                                                )
                                                                }
                                        else
                                        {
                                            @Html.DropDownList(
                                            $"SelectedEmployee_{step.StepNumber}",
                                                                finalList,
                                                                new { @class = "formcontrol2" }
                                                                )
                                                                }
                                    </p>
                                }
                           
                            
                           
                            <p class="text-muted">
                                <b>STATUS:</b> 
                                <span class=" ms-2 badge @BadgeHelper.GetApprovalsBadgeClass(step.ApprovalStatus)">
                                    @step.ApprovalStatus
                                </span>
                            </p>
                        </div>
                    </div>
                </li>
            }
            <li>
                    <div class="col-md-10 d-flex justify-content-between">
                        <div class="col-md-10">
                            <h5 class="text-information">
                                <b>Collectors Information</b>
                            </h5>
                            <hr />
                            <div class="col-md-10">
                                    <div class="form-group">
                                        <label class="control-label"> Collected By</label>  <span class="requiredlabel">*</span>
                                        <input type="text" asp-for="Requisition.CollectorName" class="form-control " placeholder="Full Name" value="" />
                                        <span asp-validation-for="Requisition.CollectorName" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label"> Collectors ID No</label>  <span class="requiredlabel">*</span>
                                        <input type="number" asp-for="Requisition.CollectorId" class="form-control " placeholder="ID Number" value="" />
                                        <span asp-validation-for="Requisition.CollectorId" class="text-danger"></span>
                                    </div>
                            </div>
                        </div>
                    </div>

            </li>
        </ul>
    </div>
</div>

<partial name="_WizardNavigation" />
</form>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // For each select with class 'formcontrol2' and required
        document.querySelectorAll('select.formcontrol2[required]').forEach(function(select) {
            select.oninvalid = function(e) {
                e.target.setCustomValidity('Enter approver');
            };
            select.oninput = function(e) {
                e.target.setCustomValidity('');
            };
        });
    });
</script>