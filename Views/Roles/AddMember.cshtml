@model MRIV.ViewModels.AddRoleGroupMemberViewModel

@{
    ViewData["Title"] = "Add Member";
    var roleGroup = ViewBag.RoleGroup as MRIV.Models.RoleGroup;
    var initialEmployees = ViewBag.InitialEmployees as List<MRIV.ViewModels.EmployeeSearchResultViewModel> ?? new List<MRIV.ViewModels.EmployeeSearchResultViewModel>();
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header border-bottom-dashed" style="padding:1rem 0rem">
                <div class="d-flex align-items-center">
                    <h6 class="card-title mb-0 flex-grow-1">Add Members to: @(roleGroup?.Name ?? "Unknown Role Group")</h6>
                    <div class="flex-shrink-0">
                        <div class="d-flex gap-2 flex-wrap">
                            <div class="search-box">
                                <form id="searchForm" method="get" action="@Url.Action("AddMember", "RoleGroups", new { id = roleGroup?.Id ?? 0 })">
                                    <input type="text" name="searchTerm" class="form-control search" placeholder="Search employees..." value="@ViewBag.SearchTerm">
                                    <i class="ri-search-line search-icon"></i>
                                </form>
                            </div>
                            @await Html.PartialAsync("_FilterToggleButton", (object)null)
                        </div>
                    </div>
                </div>
            </div>

            @await Html.PartialAsync("_Filters", (object)ViewBag.Filters)

            <div class="card-body">

                <div class="row">
                    
                    <!-- Search Results -->
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Employee List</h5>
                            </div>
                            <div class="card-body">
                                <div id="resultCount" class="alert alert-info d-none"></div>
                                <div id="searchResultsContainer">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>Payroll</th>
                                                    <th>Fullname</th>
                                                    <th>Designation</th>
                                                    <th>Department</th>
                                                    <th>Role</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="resultsBody">
                                                @if (initialEmployees != null && initialEmployees.Any())
                                                {
                                                    foreach (var employee in initialEmployees)
                                                    {
                                                        <tr>
                                                            <td><input type="checkbox" class="select-employee-checkbox" data-payroll="@employee.PayrollNo" /></td>
                                                            <td>@employee.PayrollNo</td>
                                                            <td>@employee.Name</td>
                                                            <td>@employee.Designation</td>
                                                            <td>@employee.Department</td>
                                                            <td>@employee.Role</td>
                                                            <td>
                                                                <button type="button" class="btn btn-sm btn-secondary add-employee" 
                                                                        data-payroll="@employee.PayrollNo" 
                                                                        data-name="@employee.Name">Add</button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="7" class="text-center">No employees found</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    
                                    @if (ViewBag.Pagination != null)
                                    {
                                        @await Html.PartialAsync("_Pagination", (object)ViewBag.Pagination)
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Selected Members List -->
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Selected Employees</h5>
                            </div>
                            <div class="card-body">
                                <form asp-action="AddMember" asp-controller="RoleGroups" method="post" id="addMemberForm">
                                    <input type="hidden" asp-for="RoleGroupId" />
                                    <input type="hidden" asp-for="RoleGroupName" />
                                    <div id="selectedEmployeesList">
                                        <!-- Selected employees will be rendered here by JS -->
                                    </div>
                                    <input type="hidden" name="PayrollNos" id="PayrollNosInput" />
                                    <div class="form-group mt-3">
                                        <button type="submit" class="btn btn-primary w-100" id="addMembersBtn" disabled>Add Member(s)</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            var selectedPayrolls = [];
            
            // Handle search form submission
            $('#searchForm').on('submit', function(e) {
                e.preventDefault();
                var searchTerm = $(this).find('input[name="searchTerm"]').val();
                var currentUrl = new URL(window.location.href);
                
                // Preserve all current filter parameters
                var params = new URLSearchParams(currentUrl.search);
                params.set('searchTerm', searchTerm);
                params.set('page', 1); // Reset to first page when searching
                
                // Navigate to the search URL
                window.location.href = currentUrl.pathname + '?' + params.toString();
            });
            
            // Submit search when pressing Enter
            $('input[name="searchTerm"]').on('keypress', function(e) {
                if (e.which === 13) {
                    $('#searchForm').submit();
                }
            });
            
            // Submit search when clicking the search icon
            $('.search-icon').on('click', function() {
                $('#searchForm').submit();
            });

            function updateSelectedList() {
                var listHtml = '';
                selectedPayrolls.forEach(function(payrollNo) {
                    var name = $(".add-employee[data-payroll='" + payrollNo + "']").data('name') || payrollNo;
                    listHtml += '<div class="d-flex align-items-center mb-2 selected-employee-pill bg-light p-2 rounded">'
                        + '<span class="me-2">' + payrollNo + ' - ' + name + '</span>'
                        + '<button type="button" class="btn btn-sm btn-danger ms-auto remove-selected" data-payroll="' + payrollNo + '"><i class="ri-close-line"></i></button>'
                        + '</div>';
                });
                $('#selectedEmployeesList').html(listHtml);
                $('#PayrollNosInput').val(selectedPayrolls.join(','));
                $('#addMembersBtn').prop('disabled', selectedPayrolls.length === 0);
            }
            
            $(document).on('click', '.add-employee', function() {
                var payrollNo = $(this).data('payroll');
                if (selectedPayrolls.indexOf(payrollNo) === -1) {
                    selectedPayrolls.push(payrollNo);
                    $(".select-employee-checkbox[data-payroll='" + payrollNo + "']").prop('checked', true);
                }
                updateSelectedList();
            });
            
            $(document).on('change', '.select-employee-checkbox', function() {
                var payrollNo = $(this).data('payroll');
                if ($(this).is(':checked')) {
                    if (selectedPayrolls.indexOf(payrollNo) === -1) {
                        selectedPayrolls.push(payrollNo);
                    }
                } else {
                    selectedPayrolls = selectedPayrolls.filter(function(p) { return p !== payrollNo; });
                }
                updateSelectedList();
            });
            
            $(document).on('click', '.remove-selected', function() {
                var payrollNo = $(this).data('payroll');
                selectedPayrolls = selectedPayrolls.filter(function(p) { return p !== payrollNo; });
                $(".select-employee-checkbox[data-payroll='" + payrollNo + "']").prop('checked', false);
                updateSelectedList();
            });
            
            $('#addMemberForm').on('submit', function(e) {
                if (selectedPayrolls.length === 0) {
                    alert('Please select at least one employee to add.');
                    e.preventDefault();
                } else {
                    $('#PayrollNosInput').val(selectedPayrolls.join(','));
                }
            });
        });
    </script>
}
